//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "heatpump")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub event_timestamp: DateTimeWithTimeZone,
    pub ambient_state: String,
    #[sea_orm(column_type = "Double")]
    pub ambient_temperaturecalculated: f64,
    #[sea_orm(column_type = "Double")]
    pub boiler_hightemp: f64,
    #[sea_orm(column_type = "Double")]
    pub boiler_lowtemp: f64,
    #[sea_orm(column_type = "Double")]
    pub boiler_maxtemp: f64,
    pub boiler_state: String,
    #[sea_orm(column_type = "Double")]
    pub buffer_hightemp: f64,
    #[sea_orm(column_type = "Double")]
    pub buffer_lowtemp: f64,
    #[sea_orm(column_type = "Double")]
    pub buffer_maxtemp: f64,
    pub buffer_state: String,
    #[sea_orm(column_type = "Double")]
    pub emanager_actualpower: f64,
    pub emanager_operatingstate: String,
    #[sea_orm(column_type = "Double")]
    pub emanager_pvpower: f64,
    #[sea_orm(column_type = "Double")]
    pub emanager_powersetpoint: f64,
    #[sea_orm(column_type = "Double")]
    pub heatingcircuit_1_flowtemp: f64,
    pub heatingcircuit_1_state: String,
    #[sea_orm(column_type = "Double")]
    pub heatingcircuit_2_flowtemp: f64,
    pub heatingcircuit_2_state: String,
    #[sea_orm(column_type = "Double")]
    pub heatpump_actualheatingcapacity: f64,
    #[sea_orm(column_type = "Double")]
    pub heatpump_compressorrating: f64,
    #[sea_orm(column_type = "Double")]
    pub heatpump_currentcop: f64,
    #[sea_orm(column_type = "Double")]
    pub heatpump_electricenergy: f64,
    #[sea_orm(column_type = "Double")]
    pub heatpump_energysourceinlettemp: f64,
    #[sea_orm(column_type = "Double")]
    pub heatpump_errornumber: f64,
    pub heatpump_errorstate: String,
    #[sea_orm(column_type = "Double")]
    pub heatpump_flowlinetemp: f64,
    #[sea_orm(column_type = "Double")]
    pub heatpump_heatenergy: f64,
    #[sea_orm(column_type = "Double")]
    pub heatpump_inverteractualpower: f64,
    pub heatpump_operatingstate: String,
    #[sea_orm(column_type = "Double")]
    pub heatpump_requestflowtemp: f64,
    #[sea_orm(column_type = "Double")]
    pub heatpump_requestreturntemp: f64,
    #[sea_orm(column_type = "Double")]
    pub heatpump_requesttempdiff: f64,
    pub heatpump_requesttype: String,
    #[sea_orm(column_type = "Double")]
    pub heatpump_returnlinetemp: f64,
    pub heatpump_state: String,
    #[sea_orm(column_type = "Double")]
    pub heatpump_volumesink: f64,
    #[sea_orm(column_type = "Double")]
    pub heatpump_volumesourceflow: f64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
